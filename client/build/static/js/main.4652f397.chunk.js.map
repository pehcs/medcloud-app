{"version":3,"sources":["assets/medcloud.svg","components/RegisterPatients.jsx","pages/Home/index.jsx","hooks/usePatientsData.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","marginBottomElement","marginBottom","spacing","fieldText","width","fontBold","fontWeight","fontSize","textTransform","buttonRegister","marginTop","marginLeft","height","RegisterPatients","classes","useState","nome","setNome","hospital","setHospital","descricao","setDescricao","event","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","onSubmit","className","Typography","h5","TextField","fullWidth","variant","id","name","value","onChange","target","label","TextareaAutosize","placeholder","rows","cols","Button","color","type","startIcon","root","backgroundColor","logo","appBar","boxShadow","position","drawer","drawerPaper","toolbar","mixins","buttonList","paddingRight","inline","inlineSub","grow","flexGrow","marginBottomElementSmall","positionMain","icon","marginRight","deleteButton","contrastText","Home","visible","setVisible","patient","setNewPatient","useEffect","data","results","usePatientsData","viewPatient","setViewPatient","patientId","window","alert","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","src","logoImg","Drawer","paper","anchor","onClick","e","List","component","map","text","index","ListItem","createdAt","handleViewPatient","button","style","ListItemText","primary","noWrap","secondary","Divider","Box","ml","mt","handleDelete","createMuiTheme","palette","main","zIndex","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4652f397.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/medcloud.7c5762c1.svg\";","import { useTheme } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { TextField, Typography, TextareaAutosize, Button, makeStyles } from '@material-ui/core'\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  marginBottomElement: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  fieldText: {\r\n    width: '25vw',\r\n  },\r\n  fontBold:{\r\n    fontWeight: 'bold',\r\n    fontSize: 20,\r\n    marginBottom: theme.spacing(4),\r\n    textTransform: 'uppercase',\r\n  },\r\n  buttonRegister: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(4),\r\n    height: \"2.5rem\",\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nexport function RegisterPatients() {\r\n  const classes = useStyles()\r\n\r\n  const [nome, setNome] = useState(\"\");\r\n  const [hospital, setHospital] = useState(\"\");\r\n  const [descricao, setDescricao] = useState(\"\");\r\n\r\n  async function handleCreateNewPatient(event){\r\n    event.preventDefault()\r\n    await fetch('/add',{\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        nome: nome,\r\n        hospital: hospital,\r\n        descricao: descricao\r\n      })\r\n    }).then(function(res){\r\n      setNome(\"\")\r\n      setHospital(\"\")\r\n      setDescricao(\"\")\r\n      return res.json(); }) \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleCreateNewPatient} className={classes.fieldText}>\r\n      <Typography className={classes.fontBold} h5>\r\n        Registro de pacientes\r\n      </Typography>\r\n      <div>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"outlined-basic\"\r\n          name=\"nome\"\r\n          value={nome}\r\n          onChange={(event) => setNome(event.target.value)}\r\n          className={classes.marginBottomElement}\r\n          label=\"Nome completo\"\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          id=\"outlined-basic\"\r\n          name=\"hospital\"\r\n          value={hospital}\r\n          onChange={(event) => setHospital(event.target.value)}\r\n          className={classes.marginBottomElement}\r\n          label=\"Hospital\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextareaAutosize\r\n          value={descricao}\r\n          name=\"descricao\"\r\n          onChange={(event) => setDescricao(event.target.value)}\r\n          placeholder=\"Descrição\"\r\n          rows=\"10\"\r\n          cols=\"46\"\r\n          className={classes.marginBottomElement}\r\n        />\r\n      </div>\r\n      <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          startIcon={<AddIcon/>}\r\n          className={classes.buttonRegister}\r\n        >\r\n          Confirmar\r\n        </Button>\r\n    </form>\r\n  );\r\n}\r\n","import logoImg from \"../../assets/medcloud.svg\";\r\nimport {\r\n  CssBaseline,\r\n  Box,\r\n  Button,\r\n  AppBar,\r\n  List,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  makeStyles,\r\n  Drawer,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useState } from \"react\";\r\nimport { usePatientsData } from \"../../hooks/usePatientsData\";\r\nimport { RegisterPatients } from \"../../components/RegisterPatients\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  logo: {\r\n    height: \"30px\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  appBar: {\r\n    boxShadow: \"2px 2px 2px 1px rgba(0, 0, 0, 0.05)\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  drawer: {\r\n    width: \"27vw\",\r\n  },\r\n  drawerPaper: {\r\n    width: \"27vw\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  buttonList: {\r\n    height: \"10vh\",\r\n    paddingRight: \"10vw\",\r\n  },\r\n  inline: {\r\n    fontWeight: \"bold\",\r\n    paddingRight: \"20vw\",\r\n  },\r\n  inlineSub: {\r\n    fontWeight: \"500\",\r\n    paddingRight: \"20vw\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  marginBottomElement: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  marginBottomElementSmall: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  fieldText: {\r\n    width: \"25vw\",\r\n  },\r\n  positionMain: {\r\n    position: \"relative\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n\r\n  buttonRegister: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(4),\r\n    height: \"2.5rem\",\r\n    width: \"90%\",\r\n  },\r\n  fontBold: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    marginBottom: theme.spacing(4),\r\n    textTransform: \"uppercase\",\r\n  },\r\n  deleteButton:{\r\n    backgroundColor: '#f44336',\r\n    contrastText: 'fff'\r\n  },\r\n}));\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  const [visible, setVisible] = useState(true);\r\n  const patient = usePatientsData();\r\n  const [viewPatient, setViewPatient] = useState(\"\");\r\n\r\n  function handleViewPatient(text) {\r\n    setViewPatient({\r\n      id: text.id,\r\n      nome: text.nome,\r\n      hospital: text.hospital,\r\n      descricao: text.descricao,\r\n      createdAt: text.createdAt,\r\n    });\r\n  }\r\n\r\n  async function handleDelete(patientId) {\r\n    window.alert(\"Você tem certeza que deseja deletar esse registro?\");\r\n    await fetch(\"/delete\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: patientId,\r\n      }),\r\n    }).then(function (res) {\r\n      return res.json();\r\n    });\r\n  }\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" aria-label=\"menu\">\r\n            <img src={logoImg} className={classes.logo} />\r\n          </IconButton>\r\n          <div className={classes.grow} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <Toolbar></Toolbar>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon/>}\r\n          className={classes.buttonRegister}\r\n          onClick={(e) => setVisible(true)}\r\n        >\r\n          Registrar paciente\r\n        </Button>\r\n        <List component=\"nav\">\r\n          {patient.map((text, index) => {\r\n            return (\r\n              <>\r\n                <ListItem\r\n                  onClick={(e) => {\r\n                    setVisible(false);\r\n                    handleViewPatient(text);\r\n                  }}\r\n                  button\r\n                  key={text.id}\r\n                  className={classes.buttonList}\r\n                >\r\n                  <AccountCircle\r\n                    style={{ fontSize: 40 }}\r\n                    color=\"primary\"\r\n                    className={classes.icon}\r\n                  />\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        color=\"primary\"\r\n                        noWrap\r\n                        className={classes.inline}\r\n                      >\r\n                        {text.nome}\r\n                      </Typography>\r\n                    }\r\n                    secondary={\r\n                      <Typography noWrap className={classes.inlineSub}>\r\n                        {text.hospital}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </>\r\n            );\r\n          })}\r\n        </List>\r\n      </Drawer>\r\n      <Box component=\"div\" ml=\"26rem\" mt=\"6vh\" position=\"relative\">\r\n        {visible ? (\r\n          <RegisterPatients />\r\n        ) : (\r\n          <>\r\n            <Typography className={classes.marginBottomElementSmall} ><b>Nome:</b> {viewPatient.nome}</Typography>\r\n            <Typography className={classes.marginBottomElementSmall}><b>Hospital:</b> {viewPatient.hospital}</Typography>\r\n            <Typography className={classes.marginBottomElementSmall}><b>Descrição:</b> {viewPatient.descricao}</Typography>\r\n            <Typography className={classes.marginBottomElementSmall}><b>Número de registro:</b>: {viewPatient.id}</Typography>\r\n            <Typography className={classes.marginBottomElement}><b>Registrado em:</b> {viewPatient.createdAt}</Typography>\r\n            <Button color=\"secondary\" variant=\"contained\" startIcon={<DeleteIcon />} onClick={(e) => handleDelete(viewPatient.id)}>delete</Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </main>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport function usePatientsData() {\r\n  const [patient, setNewPatient] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    fetch(\"/patients\")\r\n    .then((res) => res.json())\r\n    .then((data)=>{\r\n      return (\r\n        setNewPatient(data.results)\r\n        )\r\n      })\r\n  },[patient])\r\n\r\n  \r\n\r\n  return patient\r\n}\r\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\n\nimport { Home } from './pages/Home/index'\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n        main: \"#009adf\",\n      },\n      secondary:{\n        main: \"#f44336\",\n        contrastText: \"#fff\",\n      },\n  },\n  spacing: 4,\n  zIndex:{\n    drawer: 1000\n  },\n}) \n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Home></Home>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}